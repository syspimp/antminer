---
## simple playbook to reboot antminer when it is too hot and not mining
## tested on antminer s9k
## run without tags to check status and display if the playbook would have reboot device
## run with "--tags report" to report/print antminer status and kernel log
## run with "--tags status" to report/print antminer status
## run with "--tags kernel" to report/print antminer kernel log
## run with "--tags reboot_when_hot" to reboot device during playbook run
## antminer checks the temperature every 30 minutes, so a cron running every 30 mins is sufficient
##[user@lab ~]# crontab -l
##30,0 * * * * /usr/bin/ansible-playbook --tags reboot_when_hot /home/user/check-miner.yml
- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    # update with extra variables
    remoteminer: 1.2.3.4
    baseurl: "http://{{ remoteminer }}"
    statusurl: cgi-bin/miner_summary.cgi
    kernelurl: cgi-bin/get_kernel_log.cgi
    rebooturl: cgi-bin/reboot.cgi
    # default passwords for antminer
    mineruser: root
    minerpass: root
    ifttt_event: from_ansible
    ifttt_key: 123
  tasks:
    - name: block for miner check
      block:
        - name: check antminer status
          uri:
            url: "{{ baseurl }}/{{ statusurl }}"
            user: "{{ mineruser }}"
            password: "{{ minerpass }}"
            return_content: yes
          register: minerstatus
          tags:
            - report
            - reboot_when_hot
            - status

        - name: transform status
          set_fact:
            hash: "{{ minerstatus.content | from_json }}"
          tags:
            - report
            - reboot_when_hot
            - status

        - name: grab ghs rate avg
          set_fact:
            ghsav: "{{ hash.SUMMARY[0]['GHS av'] | float }}"
          tags:
            - reboot_when_hot

        - name: grab ghs rate last 5s
          set_fact:
            ghs5s: "{{ hash.SUMMARY[0]['GHS 5s'] | float }}"
          tags:
            - reboot_when_hot

        - name: dump minerstatus info
          debug:
            var: hash
          tags:
            - never
            - report
            - status

        - name: report hash rate (ghs) average
          debug:
            var: ghsav
          tags:
            - reboot_when_hot

        - name: report hash rate (ghs) last 5s
          debug:
            var: ghs5s
          tags:
            - reboot_when_hot

        - name: Get Miner Kernel Log
          uri:
            url: "{{ baseurl }}/{{ kernelurl }}"
            user: "{{ mineruser }}"
            password: "{{ minerpass }}"
            return_content: yes
          register: minerkernel
          tags:
            - report
            - reboot_when_hot
            - kernel

        - name: dump kernel log
          debug:
            var: minerkernel
          tags:
            - never
            - report
            - kernel

        - name: reboot miner if temperature too high and ghs is zero
          debug:
            msg: "would reboot here if playbook ran with --tags reboot_when_hot"
          when:
            - "'Temperature is too high' in minerkernel.content"
            - ghsav == "0.0"
          notify: "reboot miner"
          changed_when: true
          tags:
            - never
            - reboot_when_hot

        - name: reboot miner if hardware failure
          debug:
            msg: "hardware failure. would reboot here if playbook ran with --tags reboot_when_hot"
          when:
            - "'ERROR! failed on Chain' in minerkernel.content or 're_open_core start!PWM' in minerkernel.content"
            - ghs5s == "0.0"
          notify: "reboot miner"
          changed_when: true
          tags:
            - never
            - reboot_when_hot

#        - name: Rebooting miner
#          uri:
#            url: "{{ baseurl }}/{{ rebooturl }}"
#            user: "{{ mineruser }}"
#            password: "{{ minerpass }}"
#          when:
#            - "'Temperature is too high' in minerkernel.content"
#            - ghsav == "0.0"
#          tags:
#            - never
#            - reboot_when_hot
#
#        - name: Rebooting miner due to hardware failure
#          uri:
#            url: "{{ baseurl }}/{{ rebooturl }}"
#            user: "{{ mineruser }}"
#            password: "{{ minerpass }}"
#          when:
#            - "'ERROR! failed on Chain' in minerkernel.content"
#            - ghs5s == "0.0"
#          tags:
#            - never
#            - reboot_when_hot

      rescue:
        - name: "error: minerstatus"
          debug:
            var: minerstatus.content | default('None',True) | from_json

        - name: "error: minerstatus"
          debug:
            var: minerkernel.content | default('None',True)

  handlers:
        - name: Rebooting miner
          uri:
            url: "{{ baseurl }}/{{ rebooturl }}"
            user: "{{ mineruser }}"
            password: "{{ minerpass }}"
          listen: "reboot miner"

        - name: Sending notification
          ignore_errors: yes
          uri:
            url: "https://maker.ifttt.com/trigger/{{ ifttt_event }}/with/key/{{ ifttt_key }}"
            body_format: json
            headers:
              Content-Type: application/json
            body:
              value1: "Rebooting miner"
              #value2: "probably hardware failure"
          listen: "send notif"
